// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareClassWebAPI;

#nullable disable

namespace ShareClassWebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShareClassWebAPI.Entities.ClassRoom", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Administrator_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InvitationCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Students_Count")
                        .HasColumnType("int");

                    b.Property<string>("Teacher_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ClassRoom");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.ClassRoomsUsers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClassRoomID")
                        .HasColumnType("int");

                    b.Property<int>("ClassRoom_ID")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClassRoomID");

                    b.HasIndex("UserID");

                    b.ToTable("ClassRoomsUsers");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.HomeTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClassRoomID")
                        .HasColumnType("int");

                    b.Property<int>("ClassRoom_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ClassRoomID");

                    b.ToTable("HomeTask");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.HomeTaskFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("File_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomeTaskID")
                        .HasColumnType("int");

                    b.Property<int>("HomeTask_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("HomeTaskID");

                    b.ToTable("HomeTaskFile");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.Reaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ReactionTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Reaction_Type")
                        .HasColumnType("int");

                    b.Property<int>("SolutionID")
                        .HasColumnType("int");

                    b.Property<int>("Solution_ID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReactionTypeID");

                    b.HasIndex("SolutionID");

                    b.HasIndex("UserID");

                    b.ToTable("Reaction");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.ReactionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ReactionType");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.Solution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("HomeTaskID")
                        .HasColumnType("int");

                    b.Property<int>("HomeTask_ID")
                        .HasColumnType("int");

                    b.Property<string>("Solution_Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("HomeTaskID");

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.SolutionFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("File_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SolutionID")
                        .HasColumnType("int");

                    b.Property<int>("Solution_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SolutionID");

                    b.ToTable("SolutionFile");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Password_Hash")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.ClassRoomsUsers", b =>
                {
                    b.HasOne("ShareClassWebAPI.Entities.ClassRoom", "ClassRoom")
                        .WithMany("ClassRoomsUsers")
                        .HasForeignKey("ClassRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareClassWebAPI.Entities.User", "User")
                        .WithMany("ClassRoomsUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.HomeTask", b =>
                {
                    b.HasOne("ShareClassWebAPI.Entities.ClassRoom", "ClassRoom")
                        .WithMany("HomeTask")
                        .HasForeignKey("ClassRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.HomeTaskFile", b =>
                {
                    b.HasOne("ShareClassWebAPI.Entities.HomeTask", "HomeTask")
                        .WithMany("HomeTaskFile")
                        .HasForeignKey("HomeTaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeTask");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.Reaction", b =>
                {
                    b.HasOne("ShareClassWebAPI.Entities.ReactionType", "ReactionType")
                        .WithMany("Reaction")
                        .HasForeignKey("ReactionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareClassWebAPI.Entities.Solution", "Solution")
                        .WithMany("Reaction")
                        .HasForeignKey("SolutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareClassWebAPI.Entities.User", "User")
                        .WithMany("Reaction")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReactionType");

                    b.Navigation("Solution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.Solution", b =>
                {
                    b.HasOne("ShareClassWebAPI.Entities.HomeTask", "HomeTask")
                        .WithMany("Solution")
                        .HasForeignKey("HomeTaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeTask");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.SolutionFile", b =>
                {
                    b.HasOne("ShareClassWebAPI.Entities.Solution", "Solution")
                        .WithMany("SolutionFile")
                        .HasForeignKey("SolutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.ClassRoom", b =>
                {
                    b.Navigation("ClassRoomsUsers");

                    b.Navigation("HomeTask");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.HomeTask", b =>
                {
                    b.Navigation("HomeTaskFile");

                    b.Navigation("Solution");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.ReactionType", b =>
                {
                    b.Navigation("Reaction");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.Solution", b =>
                {
                    b.Navigation("Reaction");

                    b.Navigation("SolutionFile");
                });

            modelBuilder.Entity("ShareClassWebAPI.Entities.User", b =>
                {
                    b.Navigation("ClassRoomsUsers");

                    b.Navigation("Reaction");
                });
#pragma warning restore 612, 618
        }
    }
}
